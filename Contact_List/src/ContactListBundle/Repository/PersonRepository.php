<?php

namespace ContactListBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * PersonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonRepository extends EntityRepository
{
    public function findPersonWithPhone($id)
    {
        $query = $this->getEntityManager()->createQuery('SELECT p FROM ContactListBundle:Person p WHERE p.phone =:id');
        $query->setParameter('id', $id);
        return $query->getResult();
    }

    public function findPersonWithEmail($id)
    {
        $query = $this->getEntityManager()->createQuery('SELECT p FROM ContactListBundle:Person p WHERE p.email =:id');
        $query->setParameter('id', $id);
        return $query->getResult();
    }

    public function findPersonWithAddress($id)
    {
        $query = $this->getEntityManager()->createQuery('SELECT p FROM ContactListBundle:Person p WHERE p.address =:id');
        $query->setParameter('id', $id);
        return $query->getResult();
    }

    public function findPersonWithGroup($id)
    {
        $query = $this->getEntityManager()->createQuery('SELECT p FROM ContactListBundle:Person p WHERE p.groups =:id');
        $query->setParameter('id', $id);
        return $query->getResult();
    }

    public function findPersonByIdWithUserId($id, $user_id)
    {
        $query = $this->getEntityManager()->createQuery('SELECT p FROM ContactListBundle:Person p WHERE p.user = :user_id AND p.id =:id');
        $query->setParameters(['id' => $id, 'user_id' => $user_id]);
        return $query->getSingleResult();
    }

    public function findPersonsByUserId($id)
    {
        $query = $this->getEntityManager()->createQuery('SELECT p FROM ContactListBundle:Person p WHERE p.user = :user');
        $query->setParameter('user',$id);
        return $query->getResult();
    }
}
